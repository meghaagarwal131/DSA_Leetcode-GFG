//{ Driver Code Starts
// Initial Template for Java

import java.util.*;
class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a, n);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++)
                    System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}

// } Driver Code Ends


// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    public static ArrayList<String> findPath(int[][] m, int n) {
        // Your code here
        String ans = "";
        ArrayList<String> arr = new ArrayList<>();
        int[][] visited = new int[m.length][m.length];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                visited[i][j] = 0;
            }
        }
        if(m[n-1][n-1]==0){
            arr.add("-1");
            return arr;
        }
     Path(m, n, ans, 0,0, visited, arr);  
     return arr;
    }
    
    public static void Path(int[][] m, int n, String ans, int row, int col, int[][] visited,
    ArrayList<String> arr) {
        // Your code here
if(row==n-1 && col==n-1){
    arr.add(ans);
    return;
}
if(m[row][col]==0 || visited[row][col]==1){
    return;
}
     visited[row][col] = 1;     
     if(row<n-1)     Path(m, n, ans+"D",row+1,col, visited,arr);
     if(col>0)     Path(m, n, ans+"L",row,col-1, visited,arr);
     if(col<n-1)     Path(m, n, ans+"R",row,col+1, visited,arr);
     if(row>0)     Path(m, n, ans+"U",row-1,col, visited,arr);
     visited[row][col] = 0;
     
    }
    
}
